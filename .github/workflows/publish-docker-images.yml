name: Publish Docker Images

on:
  workflow_call:
    inputs:
      ziti-tag:
        description: Image tag to publish for ziti container images
        type: string
        required: true

jobs:
  publish-docker-images:
    runs-on: ubuntu-24.04
    permissions:
      id-token: write      # need write to get OIDC token for generating attestations
      attestations: write  # need write to create attestations
    env:
      REGISTRY: docker.io
      ZITI_CLI_TAG:          ${{ inputs.ziti-tag || github.event.inputs.ziti-tag }}
      ZITI_CLI_IMAGE:        ${{ vars.ZITI_CLI_IMAGE || 'openziti/ziti-cli' }}
      ZITI_CONTROLLER_IMAGE: ${{ vars.ZITI_CONTROLLER_IMAGE || 'openziti/ziti-controller' }}
      ZITI_ROUTER_IMAGE:     ${{ vars.ZITI_ROUTER_IMAGE || 'openziti/ziti-router' }}
      ZITI_TUNNEL_IMAGE:     ${{ vars.ZITI_TUNNEL_IMAGE || 'openziti/ziti-tunnel' }}
    steps:
      - name: Checkout Workspace
        uses: actions/checkout@v5

      - name: Download Linux Release Artifacts
        uses: actions/download-artifact@v5
        with:
          name: linux-release-${{ github.run_id }}
          path: release/

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64

      - name: Set Up Docker BuildKit
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY}}
          username: ${{ vars.DOCKER_HUB_API_USER || secrets.DOCKER_HUB_API_USER }}
          password: ${{ secrets.DOCKER_HUB_API_TOKEN }}

      - name: Set Up Container Image Tags for Base CLI Container
        env:
          IMAGE_REPO: ${{ env.REGISTRY }}/${{ env.ZITI_CLI_IMAGE }}
          IMAGE_TAG: ${{ env.ZITI_CLI_TAG }}
        id: tagprep_cli
        shell: bash
        run: |
          echo DOCKER_TAGS="${IMAGE_REPO}:${IMAGE_TAG}" | tee -a $GITHUB_OUTPUT

      - name: Push CLI Image to Hub
        uses: docker/build-push-action@v6
        id: push_cli
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/dist/docker-images/ziti-cli/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_cli.outputs.DOCKER_TAGS }}
          build-args: |
            DOCKER_BUILD_DIR=./dist/docker-images/ziti-cli
          provenance: mode=max
          sbom: true
          push: true

      - name: Publish Attestations to GitHub
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.ZITI_CLI_IMAGE }}
          subject-digest: ${{ steps.push_cli.outputs.digest }}
          push-to-registry: true

      - name: Set Up Container Image Tags for Controller Container
        env:
          IMAGE_REPO: ${{ env.REGISTRY }}/${{ env.ZITI_CONTROLLER_IMAGE }}
          IMAGE_TAG: ${{ env.ZITI_CLI_TAG }}
        id: tagprep_ctrl
        shell: bash
        run: |
          echo DOCKER_TAGS="${IMAGE_REPO}:${IMAGE_TAG}" | tee -a $GITHUB_OUTPUT

      - name: Push Controller Image to Hub
        uses: docker/build-push-action@v6
        id: push_ctrl
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/dist/docker-images/ziti-controller/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_ctrl.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_CLI_TAG=${{ env.ZITI_CLI_TAG }}
            ZITI_CLI_IMAGE=${{ env.REGISTRY }}/${{ env.ZITI_CLI_IMAGE }}
            DOCKER_BUILD_DIR=./dist/docker-images/ziti-controller
          provenance: mode=max
          sbom: true
          push: true

      - name: Publish Attestations to GitHub
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.ZITI_CONTROLLER_IMAGE }}
          subject-digest: ${{ steps.push_ctrl.outputs.digest }}
          push-to-registry: true

      - name: Set Up Container Image Tags for Router Container
        env:
          IMAGE_REPO: ${{ env.REGISTRY }}/${{ env.ZITI_ROUTER_IMAGE }}
          IMAGE_TAG: ${{ env.ZITI_CLI_TAG }}
        id: tagprep_router
        shell: bash
        run: |
          echo DOCKER_TAGS="${IMAGE_REPO}:${IMAGE_TAG}" | tee -a $GITHUB_OUTPUT

      - name: Push Router Image to Hub
        uses: docker/build-push-action@v6
        id: push_router
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/dist/docker-images/ziti-router/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_router.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_CLI_TAG=${{ env.ZITI_CLI_TAG }}
            ZITI_CLI_IMAGE=${{ env.REGISTRY }}/${{ env.ZITI_CLI_IMAGE }}
            DOCKER_BUILD_DIR=./dist/docker-images/ziti-router
          provenance: mode=max
          sbom: true
          push: true

      - name: Publish Attestations to GitHub
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.ZITI_ROUTER_IMAGE }}
          subject-digest: ${{ steps.push_router.outputs.digest }}
          push-to-registry: true

      - name: Set Up Container Image Tags for Go Tunneler Container
        env:
          IMAGE_REPO: ${{ env.REGISTRY }}/${{ env.ZITI_TUNNEL_IMAGE }}
          IMAGE_TAG: ${{ env.ZITI_CLI_TAG }}
        id: tagprep_tun
        shell: bash
        run: |
          echo DOCKER_TAGS="${IMAGE_REPO}:${IMAGE_TAG}" | tee -a $GITHUB_OUTPUT

      - name: Push Tunneler Image to Hub
        uses: docker/build-push-action@v6
        id: push_tunnel
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/dist/docker-images/ziti-tunnel/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_tun.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_CLI_TAG=${{ env.ZITI_CLI_TAG }}
            ZITI_CLI_IMAGE=${{ env.REGISTRY }}/${{ env.ZITI_CLI_IMAGE }}
          provenance: mode=max
          sbom: true
          push: true

      - name: Publish Attestations to GitHub
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.ZITI_TUNNEL_IMAGE }}
          subject-digest: ${{ steps.push_tunnel.outputs.digest }}
          push-to-registry: true
