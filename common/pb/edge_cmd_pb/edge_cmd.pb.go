// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: edge_cmd.proto

package edge_cmd_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_Zero                                   CommandType = 0
	CommandType_CreateEdgeTerminatorType               CommandType = 1000
	CommandType_ReplaceEnrollmentWithAuthenticatorType CommandType = 1001
	CommandType_CreateEdgeRouterType                   CommandType = 1002
	CommandType_CreateTransitRouterType                CommandType = 1003
	CommandType_CreateIdentityWithEnrollmentsType      CommandType = 1004
	CommandType_UpdateServiceConfigsType               CommandType = 1005
	CommandType_ReEnrollEdgeRouterType                 CommandType = 1006
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0:    "Zero",
		1000: "CreateEdgeTerminatorType",
		1001: "ReplaceEnrollmentWithAuthenticatorType",
		1002: "CreateEdgeRouterType",
		1003: "CreateTransitRouterType",
		1004: "CreateIdentityWithEnrollmentsType",
		1005: "UpdateServiceConfigsType",
		1006: "ReEnrollEdgeRouterType",
	}
	CommandType_value = map[string]int32{
		"Zero":                                   0,
		"CreateEdgeTerminatorType":               1000,
		"ReplaceEnrollmentWithAuthenticatorType": 1001,
		"CreateEdgeRouterType":                   1002,
		"CreateTransitRouterType":                1003,
		"CreateIdentityWithEnrollmentsType":      1004,
		"UpdateServiceConfigsType":               1005,
		"ReEnrollEdgeRouterType":                 1006,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_cmd_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_edge_cmd_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{0}
}

type ChangeContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes map[string]string `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RaftIndex  uint64            `protobuf:"varint,2,opt,name=raftIndex,proto3" json:"raftIndex,omitempty"`
}

func (x *ChangeContext) Reset() {
	*x = ChangeContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeContext) ProtoMessage() {}

func (x *ChangeContext) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeContext.ProtoReflect.Descriptor instead.
func (*ChangeContext) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeContext) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ChangeContext) GetRaftIndex() uint64 {
	if x != nil {
		return x.RaftIndex
	}
	return 0
}

type CreateEdgeTerminatorCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerminatorData []byte         `protobuf:"bytes,1,opt,name=terminatorData,proto3" json:"terminatorData,omitempty"`
	Ctx            *ChangeContext `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *CreateEdgeTerminatorCommand) Reset() {
	*x = CreateEdgeTerminatorCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEdgeTerminatorCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEdgeTerminatorCommand) ProtoMessage() {}

func (x *CreateEdgeTerminatorCommand) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEdgeTerminatorCommand.ProtoReflect.Descriptor instead.
func (*CreateEdgeTerminatorCommand) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEdgeTerminatorCommand) GetTerminatorData() []byte {
	if x != nil {
		return x.TerminatorData
	}
	return nil
}

func (x *CreateEdgeTerminatorCommand) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type TagValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*TagValue_BoolValue
	//	*TagValue_StringValue
	//	*TagValue_FpValue
	//	*TagValue_NilValue
	Value isTagValue_Value `protobuf_oneof:"value"`
}

func (x *TagValue) Reset() {
	*x = TagValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagValue) ProtoMessage() {}

func (x *TagValue) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagValue.ProtoReflect.Descriptor instead.
func (*TagValue) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{2}
}

func (m *TagValue) GetValue() isTagValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TagValue) GetBoolValue() bool {
	if x, ok := x.GetValue().(*TagValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *TagValue) GetStringValue() string {
	if x, ok := x.GetValue().(*TagValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *TagValue) GetFpValue() float64 {
	if x, ok := x.GetValue().(*TagValue_FpValue); ok {
		return x.FpValue
	}
	return 0
}

func (x *TagValue) GetNilValue() bool {
	if x, ok := x.GetValue().(*TagValue_NilValue); ok {
		return x.NilValue
	}
	return false
}

type isTagValue_Value interface {
	isTagValue_Value()
}

type TagValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=boolValue,proto3,oneof"`
}

type TagValue_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=stringValue,proto3,oneof"`
}

type TagValue_FpValue struct {
	FpValue float64 `protobuf:"fixed64,3,opt,name=fpValue,proto3,oneof"`
}

type TagValue_NilValue struct {
	NilValue bool `protobuf:"varint,4,opt,name=nilValue,proto3,oneof"`
}

func (*TagValue_BoolValue) isTagValue_Value() {}

func (*TagValue_StringValue) isTagValue_Value() {}

func (*TagValue_FpValue) isTagValue_Value() {}

func (*TagValue_NilValue) isTagValue_Value() {}

type JsonMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]*JsonValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JsonMap) Reset() {
	*x = JsonMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonMap) ProtoMessage() {}

func (x *JsonMap) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonMap.ProtoReflect.Descriptor instead.
func (*JsonMap) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{3}
}

func (x *JsonMap) GetValue() map[string]*JsonValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type JsonList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*JsonValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *JsonList) Reset() {
	*x = JsonList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonList) ProtoMessage() {}

func (x *JsonList) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonList.ProtoReflect.Descriptor instead.
func (*JsonList) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{4}
}

func (x *JsonList) GetValue() []*JsonValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type JsonValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*JsonValue_BoolValue
	//	*JsonValue_StringValue
	//	*JsonValue_FpValue
	//	*JsonValue_Int64Value
	//	*JsonValue_NilValue
	//	*JsonValue_MapValue
	//	*JsonValue_ListValue
	Value isJsonValue_Value `protobuf_oneof:"value"`
}

func (x *JsonValue) Reset() {
	*x = JsonValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonValue) ProtoMessage() {}

func (x *JsonValue) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonValue.ProtoReflect.Descriptor instead.
func (*JsonValue) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{5}
}

func (m *JsonValue) GetValue() isJsonValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *JsonValue) GetBoolValue() bool {
	if x, ok := x.GetValue().(*JsonValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *JsonValue) GetStringValue() string {
	if x, ok := x.GetValue().(*JsonValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *JsonValue) GetFpValue() float64 {
	if x, ok := x.GetValue().(*JsonValue_FpValue); ok {
		return x.FpValue
	}
	return 0
}

func (x *JsonValue) GetInt64Value() int64 {
	if x, ok := x.GetValue().(*JsonValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (x *JsonValue) GetNilValue() bool {
	if x, ok := x.GetValue().(*JsonValue_NilValue); ok {
		return x.NilValue
	}
	return false
}

func (x *JsonValue) GetMapValue() *JsonMap {
	if x, ok := x.GetValue().(*JsonValue_MapValue); ok {
		return x.MapValue
	}
	return nil
}

func (x *JsonValue) GetListValue() *JsonList {
	if x, ok := x.GetValue().(*JsonValue_ListValue); ok {
		return x.ListValue
	}
	return nil
}

type isJsonValue_Value interface {
	isJsonValue_Value()
}

type JsonValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=boolValue,proto3,oneof"`
}

type JsonValue_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=stringValue,proto3,oneof"`
}

type JsonValue_FpValue struct {
	FpValue float64 `protobuf:"fixed64,3,opt,name=fpValue,proto3,oneof"`
}

type JsonValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,4,opt,name=int64Value,proto3,oneof"`
}

type JsonValue_NilValue struct {
	NilValue bool `protobuf:"varint,5,opt,name=nilValue,proto3,oneof"`
}

type JsonValue_MapValue struct {
	MapValue *JsonMap `protobuf:"bytes,6,opt,name=mapValue,proto3,oneof"`
}

type JsonValue_ListValue struct {
	ListValue *JsonList `protobuf:"bytes,7,opt,name=listValue,proto3,oneof"`
}

func (*JsonValue_BoolValue) isJsonValue_Value() {}

func (*JsonValue_StringValue) isJsonValue_Value() {}

func (*JsonValue_FpValue) isJsonValue_Value() {}

func (*JsonValue_Int64Value) isJsonValue_Value() {}

func (*JsonValue_NilValue) isJsonValue_Value() {}

func (*JsonValue_MapValue) isJsonValue_Value() {}

func (*JsonValue_ListValue) isJsonValue_Value() {}

// Authenticators
type Authenticator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags       map[string]*TagValue `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IdentityId string               `protobuf:"bytes,3,opt,name=identityId,proto3" json:"identityId,omitempty"`
	// Types that are assignable to Subtype:
	//
	//	*Authenticator_Cert_
	//	*Authenticator_Updb_
	Subtype isAuthenticator_Subtype `protobuf_oneof:"subtype"`
}

func (x *Authenticator) Reset() {
	*x = Authenticator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authenticator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authenticator) ProtoMessage() {}

func (x *Authenticator) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authenticator.ProtoReflect.Descriptor instead.
func (*Authenticator) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6}
}

func (x *Authenticator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Authenticator) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Authenticator) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (m *Authenticator) GetSubtype() isAuthenticator_Subtype {
	if m != nil {
		return m.Subtype
	}
	return nil
}

func (x *Authenticator) GetCert() *Authenticator_Cert {
	if x, ok := x.GetSubtype().(*Authenticator_Cert_); ok {
		return x.Cert
	}
	return nil
}

func (x *Authenticator) GetUpdb() *Authenticator_Updb {
	if x, ok := x.GetSubtype().(*Authenticator_Updb_); ok {
		return x.Updb
	}
	return nil
}

type isAuthenticator_Subtype interface {
	isAuthenticator_Subtype()
}

type Authenticator_Cert_ struct {
	Cert *Authenticator_Cert `protobuf:"bytes,4,opt,name=cert,proto3,oneof"`
}

type Authenticator_Updb_ struct {
	Updb *Authenticator_Updb `protobuf:"bytes,5,opt,name=updb,proto3,oneof"`
}

func (*Authenticator_Cert_) isAuthenticator_Subtype() {}

func (*Authenticator_Updb_) isAuthenticator_Subtype() {}

// Auth Policies
type AuthPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Primary   *AuthPolicy_Primary   `protobuf:"bytes,3,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary *AuthPolicy_Secondary `protobuf:"bytes,4,opt,name=secondary,proto3" json:"secondary,omitempty"`
	Tags      map[string]*TagValue  `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuthPolicy) Reset() {
	*x = AuthPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy) ProtoMessage() {}

func (x *AuthPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy.ProtoReflect.Descriptor instead.
func (*AuthPolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7}
}

func (x *AuthPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthPolicy) GetPrimary() *AuthPolicy_Primary {
	if x != nil {
		return x.Primary
	}
	return nil
}

func (x *AuthPolicy) GetSecondary() *AuthPolicy_Secondary {
	if x != nil {
		return x.Secondary
	}
	return nil
}

func (x *AuthPolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

// CAs
type Ca struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags                      map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Fingerprint               string               `protobuf:"bytes,4,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	CertPem                   string               `protobuf:"bytes,5,opt,name=certPem,proto3" json:"certPem,omitempty"`
	IsVerified                bool                 `protobuf:"varint,6,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	VerificationToken         string               `protobuf:"bytes,7,opt,name=verificationToken,proto3" json:"verificationToken,omitempty"`
	IsAutoCaEnrollmentEnabled bool                 `protobuf:"varint,8,opt,name=isAutoCaEnrollmentEnabled,proto3" json:"isAutoCaEnrollmentEnabled,omitempty"`
	IsOttCaEnrollmentEnabled  bool                 `protobuf:"varint,9,opt,name=isOttCaEnrollmentEnabled,proto3" json:"isOttCaEnrollmentEnabled,omitempty"`
	IsAuthEnabled             bool                 `protobuf:"varint,10,opt,name=isAuthEnabled,proto3" json:"isAuthEnabled,omitempty"`
	IdentityRoles             []string             `protobuf:"bytes,11,rep,name=identityRoles,proto3" json:"identityRoles,omitempty"`
	IdentityNameFormat        string               `protobuf:"bytes,12,opt,name=identityNameFormat,proto3" json:"identityNameFormat,omitempty"`
	ExternalIdClaim           *Ca_ExternalIdClaim  `protobuf:"bytes,13,opt,name=externalIdClaim,proto3,oneof" json:"externalIdClaim,omitempty"`
}

func (x *Ca) Reset() {
	*x = Ca{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ca) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ca) ProtoMessage() {}

func (x *Ca) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ca.ProtoReflect.Descriptor instead.
func (*Ca) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{8}
}

func (x *Ca) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ca) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ca) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Ca) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Ca) GetCertPem() string {
	if x != nil {
		return x.CertPem
	}
	return ""
}

func (x *Ca) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Ca) GetVerificationToken() string {
	if x != nil {
		return x.VerificationToken
	}
	return ""
}

func (x *Ca) GetIsAutoCaEnrollmentEnabled() bool {
	if x != nil {
		return x.IsAutoCaEnrollmentEnabled
	}
	return false
}

func (x *Ca) GetIsOttCaEnrollmentEnabled() bool {
	if x != nil {
		return x.IsOttCaEnrollmentEnabled
	}
	return false
}

func (x *Ca) GetIsAuthEnabled() bool {
	if x != nil {
		return x.IsAuthEnabled
	}
	return false
}

func (x *Ca) GetIdentityRoles() []string {
	if x != nil {
		return x.IdentityRoles
	}
	return nil
}

func (x *Ca) GetIdentityNameFormat() string {
	if x != nil {
		return x.IdentityNameFormat
	}
	return ""
}

func (x *Ca) GetExternalIdClaim() *Ca_ExternalIdClaim {
	if x != nil {
		return x.ExternalIdClaim
	}
	return nil
}

// Configs
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ConfigTypeId string               `protobuf:"bytes,3,opt,name=configTypeId,proto3" json:"configTypeId,omitempty"`
	Data         []byte               `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Tags         map[string]*TagValue `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{9}
}

func (x *Config) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Config) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config) GetConfigTypeId() string {
	if x != nil {
		return x.ConfigTypeId
	}
	return ""
}

func (x *Config) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Config) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Config Types
type ConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Schema []byte               `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Tags   map[string]*TagValue `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConfigType) Reset() {
	*x = ConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigType) ProtoMessage() {}

func (x *ConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigType.ProtoReflect.Descriptor instead.
func (*ConfigType) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigType) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ConfigType) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Controllers
type Controller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address      string                     `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CertPem      string                     `protobuf:"bytes,4,opt,name=certPem,proto3" json:"certPem,omitempty"`
	Fingerprint  string                     `protobuf:"bytes,5,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	IsOnline     bool                       `protobuf:"varint,6,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	LastJoinedAt *timestamppb.Timestamp     `protobuf:"bytes,7,opt,name=lastJoinedAt,proto3" json:"lastJoinedAt,omitempty"`
	Tags         map[string]*TagValue       `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ApiAddresses map[string]*ApiAddressList `protobuf:"bytes,9,rep,name=apiAddresses,proto3" json:"apiAddresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Controller) Reset() {
	*x = Controller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Controller) ProtoMessage() {}

func (x *Controller) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Controller.ProtoReflect.Descriptor instead.
func (*Controller) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{11}
}

func (x *Controller) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Controller) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Controller) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Controller) GetCertPem() string {
	if x != nil {
		return x.CertPem
	}
	return ""
}

func (x *Controller) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Controller) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *Controller) GetLastJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastJoinedAt
	}
	return nil
}

func (x *Controller) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Controller) GetApiAddresses() map[string]*ApiAddressList {
	if x != nil {
		return x.ApiAddresses
	}
	return nil
}

type ApiAddressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*ApiAddress `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ApiAddressList) Reset() {
	*x = ApiAddressList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAddressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAddressList) ProtoMessage() {}

func (x *ApiAddressList) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAddressList.ProtoReflect.Descriptor instead.
func (*ApiAddressList) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{12}
}

func (x *ApiAddressList) GetAddresses() []*ApiAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ApiAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *ApiAddress) Reset() {
	*x = ApiAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAddress) ProtoMessage() {}

func (x *ApiAddress) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAddress.ProtoReflect.Descriptor instead.
func (*ApiAddress) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{13}
}

func (x *ApiAddress) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApiAddress) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Edge Routers
type EdgeRouter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags                  map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RoleAttributes        []string             `protobuf:"bytes,4,rep,name=roleAttributes,proto3" json:"roleAttributes,omitempty"`
	IsVerified            bool                 `protobuf:"varint,5,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	Fingerprint           *string              `protobuf:"bytes,6,opt,name=fingerprint,proto3,oneof" json:"fingerprint,omitempty"`
	CertPem               *string              `protobuf:"bytes,7,opt,name=certPem,proto3,oneof" json:"certPem,omitempty"`
	Hostname              *string              `protobuf:"bytes,8,opt,name=hostname,proto3,oneof" json:"hostname,omitempty"`
	IsTunnelerEnabled     bool                 `protobuf:"varint,9,opt,name=isTunnelerEnabled,proto3" json:"isTunnelerEnabled,omitempty"`
	AppData               []byte               `protobuf:"bytes,10,opt,name=appData,proto3" json:"appData,omitempty"`
	UnverifiedFingerprint *string              `protobuf:"bytes,11,opt,name=unverifiedFingerprint,proto3,oneof" json:"unverifiedFingerprint,omitempty"`
	UnverifiedCertPem     *string              `protobuf:"bytes,12,opt,name=unverifiedCertPem,proto3,oneof" json:"unverifiedCertPem,omitempty"`
	Cost                  uint32               `protobuf:"varint,13,opt,name=cost,proto3" json:"cost,omitempty"`
	NoTraversal           bool                 `protobuf:"varint,14,opt,name=noTraversal,proto3" json:"noTraversal,omitempty"`
	Disabled              bool                 `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *EdgeRouter) Reset() {
	*x = EdgeRouter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeRouter) ProtoMessage() {}

func (x *EdgeRouter) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeRouter.ProtoReflect.Descriptor instead.
func (*EdgeRouter) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{14}
}

func (x *EdgeRouter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EdgeRouter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EdgeRouter) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EdgeRouter) GetRoleAttributes() []string {
	if x != nil {
		return x.RoleAttributes
	}
	return nil
}

func (x *EdgeRouter) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *EdgeRouter) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *EdgeRouter) GetCertPem() string {
	if x != nil && x.CertPem != nil {
		return *x.CertPem
	}
	return ""
}

func (x *EdgeRouter) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *EdgeRouter) GetIsTunnelerEnabled() bool {
	if x != nil {
		return x.IsTunnelerEnabled
	}
	return false
}

func (x *EdgeRouter) GetAppData() []byte {
	if x != nil {
		return x.AppData
	}
	return nil
}

func (x *EdgeRouter) GetUnverifiedFingerprint() string {
	if x != nil && x.UnverifiedFingerprint != nil {
		return *x.UnverifiedFingerprint
	}
	return ""
}

func (x *EdgeRouter) GetUnverifiedCertPem() string {
	if x != nil && x.UnverifiedCertPem != nil {
		return *x.UnverifiedCertPem
	}
	return ""
}

func (x *EdgeRouter) GetCost() uint32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *EdgeRouter) GetNoTraversal() bool {
	if x != nil {
		return x.NoTraversal
	}
	return false
}

func (x *EdgeRouter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type ReEnrollEdgeRouterCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeRouterId string         `protobuf:"bytes,1,opt,name=edgeRouterId,proto3" json:"edgeRouterId,omitempty"`
	Ctx          *ChangeContext `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *ReEnrollEdgeRouterCmd) Reset() {
	*x = ReEnrollEdgeRouterCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReEnrollEdgeRouterCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReEnrollEdgeRouterCmd) ProtoMessage() {}

func (x *ReEnrollEdgeRouterCmd) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReEnrollEdgeRouterCmd.ProtoReflect.Descriptor instead.
func (*ReEnrollEdgeRouterCmd) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{15}
}

func (x *ReEnrollEdgeRouterCmd) GetEdgeRouterId() string {
	if x != nil {
		return x.EdgeRouterId
	}
	return ""
}

func (x *ReEnrollEdgeRouterCmd) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type CreateEdgeRouterCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeRouter *EdgeRouter    `protobuf:"bytes,1,opt,name=edgeRouter,proto3" json:"edgeRouter,omitempty"`
	Enrollment *Enrollment    `protobuf:"bytes,2,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	Ctx        *ChangeContext `protobuf:"bytes,3,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *CreateEdgeRouterCmd) Reset() {
	*x = CreateEdgeRouterCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEdgeRouterCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEdgeRouterCmd) ProtoMessage() {}

func (x *CreateEdgeRouterCmd) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEdgeRouterCmd.ProtoReflect.Descriptor instead.
func (*CreateEdgeRouterCmd) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{16}
}

func (x *CreateEdgeRouterCmd) GetEdgeRouter() *EdgeRouter {
	if x != nil {
		return x.EdgeRouter
	}
	return nil
}

func (x *CreateEdgeRouterCmd) GetEnrollment() *Enrollment {
	if x != nil {
		return x.Enrollment
	}
	return nil
}

func (x *CreateEdgeRouterCmd) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

// Edge Router Policies
type EdgeRouterPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Semantic        string               `protobuf:"bytes,4,opt,name=semantic,proto3" json:"semantic,omitempty"`
	EdgeRouterRoles []string             `protobuf:"bytes,5,rep,name=edgeRouterRoles,proto3" json:"edgeRouterRoles,omitempty"`
	IdentityRoles   []string             `protobuf:"bytes,6,rep,name=identityRoles,proto3" json:"identityRoles,omitempty"`
}

func (x *EdgeRouterPolicy) Reset() {
	*x = EdgeRouterPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeRouterPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeRouterPolicy) ProtoMessage() {}

func (x *EdgeRouterPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeRouterPolicy.ProtoReflect.Descriptor instead.
func (*EdgeRouterPolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{17}
}

func (x *EdgeRouterPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EdgeRouterPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EdgeRouterPolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EdgeRouterPolicy) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *EdgeRouterPolicy) GetEdgeRouterRoles() []string {
	if x != nil {
		return x.EdgeRouterRoles
	}
	return nil
}

func (x *EdgeRouterPolicy) GetIdentityRoles() []string {
	if x != nil {
		return x.IdentityRoles
	}
	return nil
}

// Enrollments
type Enrollment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags            map[string]*TagValue   `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Method          string                 `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	IdentityId      *string                `protobuf:"bytes,4,opt,name=identityId,proto3,oneof" json:"identityId,omitempty"`
	TransitRouterId *string                `protobuf:"bytes,5,opt,name=transitRouterId,proto3,oneof" json:"transitRouterId,omitempty"`
	EdgeRouterId    *string                `protobuf:"bytes,6,opt,name=edgeRouterId,proto3,oneof" json:"edgeRouterId,omitempty"`
	Token           string                 `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	IssuedAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=issuedAt,proto3" json:"issuedAt,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Jwt             string                 `protobuf:"bytes,10,opt,name=jwt,proto3" json:"jwt,omitempty"`
	CaId            *string                `protobuf:"bytes,11,opt,name=caId,proto3,oneof" json:"caId,omitempty"`
	Username        *string                `protobuf:"bytes,12,opt,name=username,proto3,oneof" json:"username,omitempty"`
}

func (x *Enrollment) Reset() {
	*x = Enrollment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enrollment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enrollment) ProtoMessage() {}

func (x *Enrollment) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enrollment.ProtoReflect.Descriptor instead.
func (*Enrollment) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{18}
}

func (x *Enrollment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Enrollment) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Enrollment) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Enrollment) GetIdentityId() string {
	if x != nil && x.IdentityId != nil {
		return *x.IdentityId
	}
	return ""
}

func (x *Enrollment) GetTransitRouterId() string {
	if x != nil && x.TransitRouterId != nil {
		return *x.TransitRouterId
	}
	return ""
}

func (x *Enrollment) GetEdgeRouterId() string {
	if x != nil && x.EdgeRouterId != nil {
		return *x.EdgeRouterId
	}
	return ""
}

func (x *Enrollment) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Enrollment) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *Enrollment) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Enrollment) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

func (x *Enrollment) GetCaId() string {
	if x != nil && x.CaId != nil {
		return *x.CaId
	}
	return ""
}

func (x *Enrollment) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type ReplaceEnrollmentWithAuthenticatorCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId  string         `protobuf:"bytes,1,opt,name=enrollmentId,proto3" json:"enrollmentId,omitempty"`
	Authenticator *Authenticator `protobuf:"bytes,2,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	Ctx           *ChangeContext `protobuf:"bytes,3,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *ReplaceEnrollmentWithAuthenticatorCmd) Reset() {
	*x = ReplaceEnrollmentWithAuthenticatorCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceEnrollmentWithAuthenticatorCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceEnrollmentWithAuthenticatorCmd) ProtoMessage() {}

func (x *ReplaceEnrollmentWithAuthenticatorCmd) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceEnrollmentWithAuthenticatorCmd.ProtoReflect.Descriptor instead.
func (*ReplaceEnrollmentWithAuthenticatorCmd) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{19}
}

func (x *ReplaceEnrollmentWithAuthenticatorCmd) GetEnrollmentId() string {
	if x != nil {
		return x.EnrollmentId
	}
	return ""
}

func (x *ReplaceEnrollmentWithAuthenticatorCmd) GetAuthenticator() *Authenticator {
	if x != nil {
		return x.Authenticator
	}
	return nil
}

func (x *ReplaceEnrollmentWithAuthenticatorCmd) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

// External JWT Signers
type ExternalJwtSigner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            map[string]*TagValue   `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CertPem         *string                `protobuf:"bytes,4,opt,name=certPem,proto3,oneof" json:"certPem,omitempty"`
	JwksEndpoint    *string                `protobuf:"bytes,5,opt,name=jwksEndpoint,proto3,oneof" json:"jwksEndpoint,omitempty"`
	Kid             *string                `protobuf:"bytes,6,opt,name=kid,proto3,oneof" json:"kid,omitempty"`
	Enabled         bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ExternalAuthUrl *string                `protobuf:"bytes,8,opt,name=externalAuthUrl,proto3,oneof" json:"externalAuthUrl,omitempty"`
	UseExternalId   bool                   `protobuf:"varint,9,opt,name=useExternalId,proto3" json:"useExternalId,omitempty"`
	ClaimsProperty  *string                `protobuf:"bytes,10,opt,name=claimsProperty,proto3,oneof" json:"claimsProperty,omitempty"`
	Issuer          *string                `protobuf:"bytes,11,opt,name=issuer,proto3,oneof" json:"issuer,omitempty"`
	Audience        *string                `protobuf:"bytes,12,opt,name=audience,proto3,oneof" json:"audience,omitempty"`
	CommonName      string                 `protobuf:"bytes,13,opt,name=commonName,proto3" json:"commonName,omitempty"`
	Fingerprint     *string                `protobuf:"bytes,14,opt,name=fingerprint,proto3,oneof" json:"fingerprint,omitempty"`
	NotAfter        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	NotBefore       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=notBefore,proto3" json:"notBefore,omitempty"`
	ClientId        *string                `protobuf:"bytes,17,opt,name=clientId,proto3,oneof" json:"clientId,omitempty"`
	Scopes          []string               `protobuf:"bytes,18,rep,name=scopes,proto3" json:"scopes,omitempty"`
	TargetToken     string                 `protobuf:"bytes,19,opt,name=targetToken,proto3" json:"targetToken,omitempty"`
}

func (x *ExternalJwtSigner) Reset() {
	*x = ExternalJwtSigner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalJwtSigner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalJwtSigner) ProtoMessage() {}

func (x *ExternalJwtSigner) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalJwtSigner.ProtoReflect.Descriptor instead.
func (*ExternalJwtSigner) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{20}
}

func (x *ExternalJwtSigner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExternalJwtSigner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalJwtSigner) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ExternalJwtSigner) GetCertPem() string {
	if x != nil && x.CertPem != nil {
		return *x.CertPem
	}
	return ""
}

func (x *ExternalJwtSigner) GetJwksEndpoint() string {
	if x != nil && x.JwksEndpoint != nil {
		return *x.JwksEndpoint
	}
	return ""
}

func (x *ExternalJwtSigner) GetKid() string {
	if x != nil && x.Kid != nil {
		return *x.Kid
	}
	return ""
}

func (x *ExternalJwtSigner) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ExternalJwtSigner) GetExternalAuthUrl() string {
	if x != nil && x.ExternalAuthUrl != nil {
		return *x.ExternalAuthUrl
	}
	return ""
}

func (x *ExternalJwtSigner) GetUseExternalId() bool {
	if x != nil {
		return x.UseExternalId
	}
	return false
}

func (x *ExternalJwtSigner) GetClaimsProperty() string {
	if x != nil && x.ClaimsProperty != nil {
		return *x.ClaimsProperty
	}
	return ""
}

func (x *ExternalJwtSigner) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *ExternalJwtSigner) GetAudience() string {
	if x != nil && x.Audience != nil {
		return *x.Audience
	}
	return ""
}

func (x *ExternalJwtSigner) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *ExternalJwtSigner) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *ExternalJwtSigner) GetNotAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.NotAfter
	}
	return nil
}

func (x *ExternalJwtSigner) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *ExternalJwtSigner) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ExternalJwtSigner) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *ExternalJwtSigner) GetTargetToken() string {
	if x != nil {
		return x.TargetToken
	}
	return ""
}

// Identities
type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags                      map[string]*TagValue      `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IdentityTypeId            string                    `protobuf:"bytes,4,opt,name=identityTypeId,proto3" json:"identityTypeId,omitempty"`
	IsDefaultAdmin            bool                      `protobuf:"varint,5,opt,name=isDefaultAdmin,proto3" json:"isDefaultAdmin,omitempty"`
	IsAdmin                   bool                      `protobuf:"varint,6,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	RoleAttributes            []string                  `protobuf:"bytes,7,rep,name=roleAttributes,proto3" json:"roleAttributes,omitempty"`
	EnvInfo                   *Identity_EnvInfo         `protobuf:"bytes,8,opt,name=envInfo,proto3,oneof" json:"envInfo,omitempty"`
	SdkInfo                   *Identity_SdkInfo         `protobuf:"bytes,9,opt,name=sdkInfo,proto3,oneof" json:"sdkInfo,omitempty"`
	DefaultHostingPrecedence  uint32                    `protobuf:"varint,10,opt,name=defaultHostingPrecedence,proto3" json:"defaultHostingPrecedence,omitempty"`
	DefaultHostingCost        uint32                    `protobuf:"varint,11,opt,name=defaultHostingCost,proto3" json:"defaultHostingCost,omitempty"`
	ServiceHostingPrecedences map[string]uint32         `protobuf:"bytes,12,rep,name=serviceHostingPrecedences,proto3" json:"serviceHostingPrecedences,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ServiceHostingCosts       map[string]uint32         `protobuf:"bytes,13,rep,name=serviceHostingCosts,proto3" json:"serviceHostingCosts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AppData                   []byte                    `protobuf:"bytes,14,opt,name=appData,proto3" json:"appData,omitempty"`
	AuthPolicyId              string                    `protobuf:"bytes,15,opt,name=authPolicyId,proto3" json:"authPolicyId,omitempty"`
	ExternalId                *string                   `protobuf:"bytes,16,opt,name=externalId,proto3,oneof" json:"externalId,omitempty"`
	Disabled                  bool                      `protobuf:"varint,17,opt,name=disabled,proto3" json:"disabled,omitempty"`
	DisabledAt                *timestamppb.Timestamp    `protobuf:"bytes,18,opt,name=disabledAt,proto3,oneof" json:"disabledAt,omitempty"`
	DisabledUntil             *timestamppb.Timestamp    `protobuf:"bytes,19,opt,name=disabledUntil,proto3,oneof" json:"disabledUntil,omitempty"`
	ServiceConfigs            []*Identity_ServiceConfig `protobuf:"bytes,20,rep,name=serviceConfigs,proto3" json:"serviceConfigs,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{21}
}

func (x *Identity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Identity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Identity) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Identity) GetIdentityTypeId() string {
	if x != nil {
		return x.IdentityTypeId
	}
	return ""
}

func (x *Identity) GetIsDefaultAdmin() bool {
	if x != nil {
		return x.IsDefaultAdmin
	}
	return false
}

func (x *Identity) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Identity) GetRoleAttributes() []string {
	if x != nil {
		return x.RoleAttributes
	}
	return nil
}

func (x *Identity) GetEnvInfo() *Identity_EnvInfo {
	if x != nil {
		return x.EnvInfo
	}
	return nil
}

func (x *Identity) GetSdkInfo() *Identity_SdkInfo {
	if x != nil {
		return x.SdkInfo
	}
	return nil
}

func (x *Identity) GetDefaultHostingPrecedence() uint32 {
	if x != nil {
		return x.DefaultHostingPrecedence
	}
	return 0
}

func (x *Identity) GetDefaultHostingCost() uint32 {
	if x != nil {
		return x.DefaultHostingCost
	}
	return 0
}

func (x *Identity) GetServiceHostingPrecedences() map[string]uint32 {
	if x != nil {
		return x.ServiceHostingPrecedences
	}
	return nil
}

func (x *Identity) GetServiceHostingCosts() map[string]uint32 {
	if x != nil {
		return x.ServiceHostingCosts
	}
	return nil
}

func (x *Identity) GetAppData() []byte {
	if x != nil {
		return x.AppData
	}
	return nil
}

func (x *Identity) GetAuthPolicyId() string {
	if x != nil {
		return x.AuthPolicyId
	}
	return ""
}

func (x *Identity) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

func (x *Identity) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Identity) GetDisabledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DisabledAt
	}
	return nil
}

func (x *Identity) GetDisabledUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DisabledUntil
	}
	return nil
}

func (x *Identity) GetServiceConfigs() []*Identity_ServiceConfig {
	if x != nil {
		return x.ServiceConfigs
	}
	return nil
}

type CreateIdentityWithEnrollmentsCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity    *Identity      `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Enrollments []*Enrollment  `protobuf:"bytes,2,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	Ctx         *ChangeContext `protobuf:"bytes,3,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *CreateIdentityWithEnrollmentsCmd) Reset() {
	*x = CreateIdentityWithEnrollmentsCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityWithEnrollmentsCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityWithEnrollmentsCmd) ProtoMessage() {}

func (x *CreateIdentityWithEnrollmentsCmd) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityWithEnrollmentsCmd.ProtoReflect.Descriptor instead.
func (*CreateIdentityWithEnrollmentsCmd) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{22}
}

func (x *CreateIdentityWithEnrollmentsCmd) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *CreateIdentityWithEnrollmentsCmd) GetEnrollments() []*Enrollment {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

func (x *CreateIdentityWithEnrollmentsCmd) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

// MFA
type Mfa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags          map[string]*TagValue `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsVerified    bool                 `protobuf:"varint,3,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	IdentityId    string               `protobuf:"bytes,4,opt,name=identityId,proto3" json:"identityId,omitempty"`
	Secret        string               `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	RecoveryCodes []string             `protobuf:"bytes,6,rep,name=recoveryCodes,proto3" json:"recoveryCodes,omitempty"`
}

func (x *Mfa) Reset() {
	*x = Mfa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mfa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mfa) ProtoMessage() {}

func (x *Mfa) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mfa.ProtoReflect.Descriptor instead.
func (*Mfa) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{23}
}

func (x *Mfa) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Mfa) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Mfa) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Mfa) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *Mfa) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Mfa) GetRecoveryCodes() []string {
	if x != nil {
		return x.RecoveryCodes
	}
	return nil
}

type PostureCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags           map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TypeId         string               `protobuf:"bytes,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Version        int64                `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	RoleAttributes []string             `protobuf:"bytes,6,rep,name=roleAttributes,proto3" json:"roleAttributes,omitempty"`
	// Types that are assignable to Subtype:
	//
	//	*PostureCheck_Mac_
	//	*PostureCheck_Mfa_
	//	*PostureCheck_OsList_
	//	*PostureCheck_Process_
	//	*PostureCheck_ProcessMulti_
	//	*PostureCheck_Domains_
	Subtype isPostureCheck_Subtype `protobuf_oneof:"subtype"`
}

func (x *PostureCheck) Reset() {
	*x = PostureCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck) ProtoMessage() {}

func (x *PostureCheck) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck.ProtoReflect.Descriptor instead.
func (*PostureCheck) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24}
}

func (x *PostureCheck) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostureCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostureCheck) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PostureCheck) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *PostureCheck) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PostureCheck) GetRoleAttributes() []string {
	if x != nil {
		return x.RoleAttributes
	}
	return nil
}

func (m *PostureCheck) GetSubtype() isPostureCheck_Subtype {
	if m != nil {
		return m.Subtype
	}
	return nil
}

func (x *PostureCheck) GetMac() *PostureCheck_Mac {
	if x, ok := x.GetSubtype().(*PostureCheck_Mac_); ok {
		return x.Mac
	}
	return nil
}

func (x *PostureCheck) GetMfa() *PostureCheck_Mfa {
	if x, ok := x.GetSubtype().(*PostureCheck_Mfa_); ok {
		return x.Mfa
	}
	return nil
}

func (x *PostureCheck) GetOsList() *PostureCheck_OsList {
	if x, ok := x.GetSubtype().(*PostureCheck_OsList_); ok {
		return x.OsList
	}
	return nil
}

func (x *PostureCheck) GetProcess() *PostureCheck_Process {
	if x, ok := x.GetSubtype().(*PostureCheck_Process_); ok {
		return x.Process
	}
	return nil
}

func (x *PostureCheck) GetProcessMulti() *PostureCheck_ProcessMulti {
	if x, ok := x.GetSubtype().(*PostureCheck_ProcessMulti_); ok {
		return x.ProcessMulti
	}
	return nil
}

func (x *PostureCheck) GetDomains() *PostureCheck_Domains {
	if x, ok := x.GetSubtype().(*PostureCheck_Domains_); ok {
		return x.Domains
	}
	return nil
}

type isPostureCheck_Subtype interface {
	isPostureCheck_Subtype()
}

type PostureCheck_Mac_ struct {
	Mac *PostureCheck_Mac `protobuf:"bytes,7,opt,name=mac,proto3,oneof"`
}

type PostureCheck_Mfa_ struct {
	Mfa *PostureCheck_Mfa `protobuf:"bytes,8,opt,name=mfa,proto3,oneof"`
}

type PostureCheck_OsList_ struct {
	OsList *PostureCheck_OsList `protobuf:"bytes,9,opt,name=osList,proto3,oneof"`
}

type PostureCheck_Process_ struct {
	Process *PostureCheck_Process `protobuf:"bytes,10,opt,name=process,proto3,oneof"`
}

type PostureCheck_ProcessMulti_ struct {
	ProcessMulti *PostureCheck_ProcessMulti `protobuf:"bytes,11,opt,name=processMulti,proto3,oneof"`
}

type PostureCheck_Domains_ struct {
	Domains *PostureCheck_Domains `protobuf:"bytes,12,opt,name=domains,proto3,oneof"`
}

func (*PostureCheck_Mac_) isPostureCheck_Subtype() {}

func (*PostureCheck_Mfa_) isPostureCheck_Subtype() {}

func (*PostureCheck_OsList_) isPostureCheck_Subtype() {}

func (*PostureCheck_Process_) isPostureCheck_Subtype() {}

func (*PostureCheck_ProcessMulti_) isPostureCheck_Subtype() {}

func (*PostureCheck_Domains_) isPostureCheck_Subtype() {}

type Revocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Tags      map[string]*TagValue   `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Revocation) Reset() {
	*x = Revocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Revocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revocation) ProtoMessage() {}

func (x *Revocation) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revocation.ProtoReflect.Descriptor instead.
func (*Revocation) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{25}
}

func (x *Revocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Revocation) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Revocation) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Services
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags               map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TerminatorStrategy string               `protobuf:"bytes,4,opt,name=terminatorStrategy,proto3" json:"terminatorStrategy,omitempty"`
	RoleAttributes     []string             `protobuf:"bytes,5,rep,name=roleAttributes,proto3" json:"roleAttributes,omitempty"`
	Configs            []string             `protobuf:"bytes,6,rep,name=configs,proto3" json:"configs,omitempty"`
	EncryptionRequired bool                 `protobuf:"varint,7,opt,name=encryptionRequired,proto3" json:"encryptionRequired,omitempty"`
	MaxIdleTime        int64                `protobuf:"varint,8,opt,name=maxIdleTime,proto3" json:"maxIdleTime,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{26}
}

func (x *Service) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Service) GetTerminatorStrategy() string {
	if x != nil {
		return x.TerminatorStrategy
	}
	return ""
}

func (x *Service) GetRoleAttributes() []string {
	if x != nil {
		return x.RoleAttributes
	}
	return nil
}

func (x *Service) GetConfigs() []string {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *Service) GetEncryptionRequired() bool {
	if x != nil {
		return x.EncryptionRequired
	}
	return false
}

func (x *Service) GetMaxIdleTime() int64 {
	if x != nil {
		return x.MaxIdleTime
	}
	return 0
}

// Service Edge Router Policies
type ServiceEdgeRouterPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Semantic        string               `protobuf:"bytes,4,opt,name=semantic,proto3" json:"semantic,omitempty"`
	EdgeRouterRoles []string             `protobuf:"bytes,5,rep,name=edgeRouterRoles,proto3" json:"edgeRouterRoles,omitempty"`
	ServiceRoles    []string             `protobuf:"bytes,6,rep,name=serviceRoles,proto3" json:"serviceRoles,omitempty"`
}

func (x *ServiceEdgeRouterPolicy) Reset() {
	*x = ServiceEdgeRouterPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceEdgeRouterPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEdgeRouterPolicy) ProtoMessage() {}

func (x *ServiceEdgeRouterPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEdgeRouterPolicy.ProtoReflect.Descriptor instead.
func (*ServiceEdgeRouterPolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{27}
}

func (x *ServiceEdgeRouterPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceEdgeRouterPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceEdgeRouterPolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ServiceEdgeRouterPolicy) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *ServiceEdgeRouterPolicy) GetEdgeRouterRoles() []string {
	if x != nil {
		return x.EdgeRouterRoles
	}
	return nil
}

func (x *ServiceEdgeRouterPolicy) GetServiceRoles() []string {
	if x != nil {
		return x.ServiceRoles
	}
	return nil
}

// Service Policies
type ServicePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags              map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Semantic          string               `protobuf:"bytes,4,opt,name=semantic,proto3" json:"semantic,omitempty"`
	IdentityRoles     []string             `protobuf:"bytes,5,rep,name=identityRoles,proto3" json:"identityRoles,omitempty"`
	ServiceRoles      []string             `protobuf:"bytes,6,rep,name=serviceRoles,proto3" json:"serviceRoles,omitempty"`
	PostureCheckRoles []string             `protobuf:"bytes,7,rep,name=postureCheckRoles,proto3" json:"postureCheckRoles,omitempty"`
	PolicyType        string               `protobuf:"bytes,8,opt,name=policyType,proto3" json:"policyType,omitempty"`
}

func (x *ServicePolicy) Reset() {
	*x = ServicePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePolicy) ProtoMessage() {}

func (x *ServicePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePolicy.ProtoReflect.Descriptor instead.
func (*ServicePolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{28}
}

func (x *ServicePolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServicePolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServicePolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ServicePolicy) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *ServicePolicy) GetIdentityRoles() []string {
	if x != nil {
		return x.IdentityRoles
	}
	return nil
}

func (x *ServicePolicy) GetServiceRoles() []string {
	if x != nil {
		return x.ServiceRoles
	}
	return nil
}

func (x *ServicePolicy) GetPostureCheckRoles() []string {
	if x != nil {
		return x.PostureCheckRoles
	}
	return nil
}

func (x *ServicePolicy) GetPolicyType() string {
	if x != nil {
		return x.PolicyType
	}
	return ""
}

// Transit Routers
type TransitRouter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags                  map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsVerified            bool                 `protobuf:"varint,4,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	Fingerprint           *string              `protobuf:"bytes,5,opt,name=fingerprint,proto3,oneof" json:"fingerprint,omitempty"`
	UnverifiedFingerprint *string              `protobuf:"bytes,6,opt,name=unverifiedFingerprint,proto3,oneof" json:"unverifiedFingerprint,omitempty"`
	UnverifiedCertPem     *string              `protobuf:"bytes,7,opt,name=unverifiedCertPem,proto3,oneof" json:"unverifiedCertPem,omitempty"`
	Cost                  uint32               `protobuf:"varint,8,opt,name=cost,proto3" json:"cost,omitempty"`
	NoTraversal           bool                 `protobuf:"varint,9,opt,name=noTraversal,proto3" json:"noTraversal,omitempty"`
	Disabled              bool                 `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *TransitRouter) Reset() {
	*x = TransitRouter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitRouter) ProtoMessage() {}

func (x *TransitRouter) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitRouter.ProtoReflect.Descriptor instead.
func (*TransitRouter) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{29}
}

func (x *TransitRouter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransitRouter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransitRouter) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TransitRouter) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *TransitRouter) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *TransitRouter) GetUnverifiedFingerprint() string {
	if x != nil && x.UnverifiedFingerprint != nil {
		return *x.UnverifiedFingerprint
	}
	return ""
}

func (x *TransitRouter) GetUnverifiedCertPem() string {
	if x != nil && x.UnverifiedCertPem != nil {
		return *x.UnverifiedCertPem
	}
	return ""
}

func (x *TransitRouter) GetCost() uint32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *TransitRouter) GetNoTraversal() bool {
	if x != nil {
		return x.NoTraversal
	}
	return false
}

func (x *TransitRouter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type CreateTransitRouterCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router     *TransitRouter `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	Enrollment *Enrollment    `protobuf:"bytes,2,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	Ctx        *ChangeContext `protobuf:"bytes,3,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *CreateTransitRouterCmd) Reset() {
	*x = CreateTransitRouterCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransitRouterCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransitRouterCmd) ProtoMessage() {}

func (x *CreateTransitRouterCmd) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransitRouterCmd.ProtoReflect.Descriptor instead.
func (*CreateTransitRouterCmd) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{30}
}

func (x *CreateTransitRouterCmd) GetRouter() *TransitRouter {
	if x != nil {
		return x.Router
	}
	return nil
}

func (x *CreateTransitRouterCmd) GetEnrollment() *Enrollment {
	if x != nil {
		return x.Enrollment
	}
	return nil
}

func (x *CreateTransitRouterCmd) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type UpdateServiceConfigsCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId     string                                   `protobuf:"bytes,1,opt,name=identityId,proto3" json:"identityId,omitempty"`
	Add            bool                                     `protobuf:"varint,2,opt,name=add,proto3" json:"add,omitempty"`
	ServiceConfigs []*UpdateServiceConfigsCmd_ServiceConfig `protobuf:"bytes,3,rep,name=serviceConfigs,proto3" json:"serviceConfigs,omitempty"`
	Ctx            *ChangeContext                           `protobuf:"bytes,4,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *UpdateServiceConfigsCmd) Reset() {
	*x = UpdateServiceConfigsCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceConfigsCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceConfigsCmd) ProtoMessage() {}

func (x *UpdateServiceConfigsCmd) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceConfigsCmd.ProtoReflect.Descriptor instead.
func (*UpdateServiceConfigsCmd) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateServiceConfigsCmd) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *UpdateServiceConfigsCmd) GetAdd() bool {
	if x != nil {
		return x.Add
	}
	return false
}

func (x *UpdateServiceConfigsCmd) GetServiceConfigs() []*UpdateServiceConfigsCmd_ServiceConfig {
	if x != nil {
		return x.ServiceConfigs
	}
	return nil
}

func (x *UpdateServiceConfigsCmd) GetCtx() *ChangeContext {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type Authenticator_Cert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fingerprint                string                 `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Pem                        string                 `protobuf:"bytes,2,opt,name=pem,proto3" json:"pem,omitempty"`
	UnverifiedFingerprint      string                 `protobuf:"bytes,3,opt,name=unverifiedFingerprint,proto3" json:"unverifiedFingerprint,omitempty"`
	UnverifiedPem              string                 `protobuf:"bytes,4,opt,name=unverifiedPem,proto3" json:"unverifiedPem,omitempty"`
	IsIssuedByNetwork          bool                   `protobuf:"varint,5,opt,name=isIssuedByNetwork,proto3" json:"isIssuedByNetwork,omitempty"`
	IsExtendRequested          bool                   `protobuf:"varint,6,opt,name=isExtendRequested,proto3" json:"isExtendRequested,omitempty"`
	IsKeyRollRequested         bool                   `protobuf:"varint,7,opt,name=isKeyRollRequested,proto3" json:"isKeyRollRequested,omitempty"`
	ExtendRequestedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=extendRequestedAt,proto3" json:"extendRequestedAt,omitempty"`
	PublicKeyPrint             string                 `protobuf:"bytes,9,opt,name=publicKeyPrint,proto3" json:"publicKeyPrint,omitempty"`
	LastExtendPublicKeyChanged bool                   `protobuf:"varint,10,opt,name=lastExtendPublicKeyChanged,proto3" json:"lastExtendPublicKeyChanged,omitempty"`
	LastAuthResolvedToRoot     bool                   `protobuf:"varint,11,opt,name=lastAuthResolvedToRoot,proto3" json:"lastAuthResolvedToRoot,omitempty"`
}

func (x *Authenticator_Cert) Reset() {
	*x = Authenticator_Cert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authenticator_Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authenticator_Cert) ProtoMessage() {}

func (x *Authenticator_Cert) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authenticator_Cert.ProtoReflect.Descriptor instead.
func (*Authenticator_Cert) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Authenticator_Cert) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Authenticator_Cert) GetPem() string {
	if x != nil {
		return x.Pem
	}
	return ""
}

func (x *Authenticator_Cert) GetUnverifiedFingerprint() string {
	if x != nil {
		return x.UnverifiedFingerprint
	}
	return ""
}

func (x *Authenticator_Cert) GetUnverifiedPem() string {
	if x != nil {
		return x.UnverifiedPem
	}
	return ""
}

func (x *Authenticator_Cert) GetIsIssuedByNetwork() bool {
	if x != nil {
		return x.IsIssuedByNetwork
	}
	return false
}

func (x *Authenticator_Cert) GetIsExtendRequested() bool {
	if x != nil {
		return x.IsExtendRequested
	}
	return false
}

func (x *Authenticator_Cert) GetIsKeyRollRequested() bool {
	if x != nil {
		return x.IsKeyRollRequested
	}
	return false
}

func (x *Authenticator_Cert) GetExtendRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExtendRequestedAt
	}
	return nil
}

func (x *Authenticator_Cert) GetPublicKeyPrint() string {
	if x != nil {
		return x.PublicKeyPrint
	}
	return ""
}

func (x *Authenticator_Cert) GetLastExtendPublicKeyChanged() bool {
	if x != nil {
		return x.LastExtendPublicKeyChanged
	}
	return false
}

func (x *Authenticator_Cert) GetLastAuthResolvedToRoot() bool {
	if x != nil {
		return x.LastAuthResolvedToRoot
	}
	return false
}

type Authenticator_Updb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Salt     string `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *Authenticator_Updb) Reset() {
	*x = Authenticator_Updb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authenticator_Updb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authenticator_Updb) ProtoMessage() {}

func (x *Authenticator_Updb) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authenticator_Updb.ProtoReflect.Descriptor instead.
func (*Authenticator_Updb) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Authenticator_Updb) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Authenticator_Updb) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Authenticator_Updb) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type AuthPolicy_Primary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert   *AuthPolicy_Primary_Cert   `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Updb   *AuthPolicy_Primary_Updb   `protobuf:"bytes,2,opt,name=updb,proto3" json:"updb,omitempty"`
	ExtJwt *AuthPolicy_Primary_ExtJwt `protobuf:"bytes,3,opt,name=extJwt,proto3" json:"extJwt,omitempty"`
}

func (x *AuthPolicy_Primary) Reset() {
	*x = AuthPolicy_Primary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary) ProtoMessage() {}

func (x *AuthPolicy_Primary) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7, 0}
}

func (x *AuthPolicy_Primary) GetCert() *AuthPolicy_Primary_Cert {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *AuthPolicy_Primary) GetUpdb() *AuthPolicy_Primary_Updb {
	if x != nil {
		return x.Updb
	}
	return nil
}

func (x *AuthPolicy_Primary) GetExtJwt() *AuthPolicy_Primary_ExtJwt {
	if x != nil {
		return x.ExtJwt
	}
	return nil
}

type AuthPolicy_Secondary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequireTotp          bool    `protobuf:"varint,1,opt,name=requireTotp,proto3" json:"requireTotp,omitempty"`
	RequiredExtJwtSigner *string `protobuf:"bytes,2,opt,name=requiredExtJwtSigner,proto3,oneof" json:"requiredExtJwtSigner,omitempty"`
}

func (x *AuthPolicy_Secondary) Reset() {
	*x = AuthPolicy_Secondary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Secondary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Secondary) ProtoMessage() {}

func (x *AuthPolicy_Secondary) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Secondary.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Secondary) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7, 1}
}

func (x *AuthPolicy_Secondary) GetRequireTotp() bool {
	if x != nil {
		return x.RequireTotp
	}
	return false
}

func (x *AuthPolicy_Secondary) GetRequiredExtJwtSigner() string {
	if x != nil && x.RequiredExtJwtSigner != nil {
		return *x.RequiredExtJwtSigner
	}
	return ""
}

type AuthPolicy_Primary_Cert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed           bool `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	AllowExpiredCerts bool `protobuf:"varint,2,opt,name=allowExpiredCerts,proto3" json:"allowExpiredCerts,omitempty"`
}

func (x *AuthPolicy_Primary_Cert) Reset() {
	*x = AuthPolicy_Primary_Cert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary_Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary_Cert) ProtoMessage() {}

func (x *AuthPolicy_Primary_Cert) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary_Cert.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary_Cert) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *AuthPolicy_Primary_Cert) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthPolicy_Primary_Cert) GetAllowExpiredCerts() bool {
	if x != nil {
		return x.AllowExpiredCerts
	}
	return false
}

type AuthPolicy_Primary_Updb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed                bool  `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	MinPasswordLength      int64 `protobuf:"varint,2,opt,name=MinPasswordLength,proto3" json:"MinPasswordLength,omitempty"`
	RequireSpecialChar     bool  `protobuf:"varint,3,opt,name=RequireSpecialChar,proto3" json:"RequireSpecialChar,omitempty"`
	RequireNumberChar      bool  `protobuf:"varint,4,opt,name=requireNumberChar,proto3" json:"requireNumberChar,omitempty"`
	RequireMixedCase       bool  `protobuf:"varint,5,opt,name=RequireMixedCase,proto3" json:"RequireMixedCase,omitempty"`
	MaxAttempts            int64 `protobuf:"varint,6,opt,name=MaxAttempts,proto3" json:"MaxAttempts,omitempty"`
	LockoutDurationMinutes int64 `protobuf:"varint,7,opt,name=LockoutDurationMinutes,proto3" json:"LockoutDurationMinutes,omitempty"`
}

func (x *AuthPolicy_Primary_Updb) Reset() {
	*x = AuthPolicy_Primary_Updb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary_Updb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary_Updb) ProtoMessage() {}

func (x *AuthPolicy_Primary_Updb) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary_Updb.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary_Updb) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7, 0, 1}
}

func (x *AuthPolicy_Primary_Updb) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetMinPasswordLength() int64 {
	if x != nil {
		return x.MinPasswordLength
	}
	return 0
}

func (x *AuthPolicy_Primary_Updb) GetRequireSpecialChar() bool {
	if x != nil {
		return x.RequireSpecialChar
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetRequireNumberChar() bool {
	if x != nil {
		return x.RequireNumberChar
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetRequireMixedCase() bool {
	if x != nil {
		return x.RequireMixedCase
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetMaxAttempts() int64 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *AuthPolicy_Primary_Updb) GetLockoutDurationMinutes() int64 {
	if x != nil {
		return x.LockoutDurationMinutes
	}
	return 0
}

type AuthPolicy_Primary_ExtJwt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed              bool     `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	AllowAllSigners      bool     `protobuf:"varint,2,opt,name=allowAllSigners,proto3" json:"allowAllSigners,omitempty"`
	AllowedExtJwtSigners []string `protobuf:"bytes,3,rep,name=allowedExtJwtSigners,proto3" json:"allowedExtJwtSigners,omitempty"`
}

func (x *AuthPolicy_Primary_ExtJwt) Reset() {
	*x = AuthPolicy_Primary_ExtJwt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary_ExtJwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary_ExtJwt) ProtoMessage() {}

func (x *AuthPolicy_Primary_ExtJwt) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary_ExtJwt.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary_ExtJwt) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7, 0, 2}
}

func (x *AuthPolicy_Primary_ExtJwt) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthPolicy_Primary_ExtJwt) GetAllowAllSigners() bool {
	if x != nil {
		return x.AllowAllSigners
	}
	return false
}

func (x *AuthPolicy_Primary_ExtJwt) GetAllowedExtJwtSigners() []string {
	if x != nil {
		return x.AllowedExtJwtSigners
	}
	return nil
}

type Ca_ExternalIdClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location        string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Matcher         string `protobuf:"bytes,2,opt,name=matcher,proto3" json:"matcher,omitempty"`
	MatcherCriteria string `protobuf:"bytes,3,opt,name=MatcherCriteria,proto3" json:"MatcherCriteria,omitempty"`
	Parser          string `protobuf:"bytes,4,opt,name=Parser,proto3" json:"Parser,omitempty"`
	ParserCriteria  string `protobuf:"bytes,5,opt,name=ParserCriteria,proto3" json:"ParserCriteria,omitempty"`
	Index           int64  `protobuf:"varint,6,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *Ca_ExternalIdClaim) Reset() {
	*x = Ca_ExternalIdClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ca_ExternalIdClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ca_ExternalIdClaim) ProtoMessage() {}

func (x *Ca_ExternalIdClaim) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ca_ExternalIdClaim.ProtoReflect.Descriptor instead.
func (*Ca_ExternalIdClaim) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Ca_ExternalIdClaim) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetMatcher() string {
	if x != nil {
		return x.Matcher
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetMatcherCriteria() string {
	if x != nil {
		return x.MatcherCriteria
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetParserCriteria() string {
	if x != nil {
		return x.ParserCriteria
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type Identity_EnvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch      string `protobuf:"bytes,1,opt,name=Arch,proto3" json:"Arch,omitempty"`
	Os        string `protobuf:"bytes,2,opt,name=Os,proto3" json:"Os,omitempty"`
	OsRelease string `protobuf:"bytes,3,opt,name=OsRelease,proto3" json:"OsRelease,omitempty"`
	OsVersion string `protobuf:"bytes,4,opt,name=OsVersion,proto3" json:"OsVersion,omitempty"`
	Domain    string `protobuf:"bytes,5,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Hostname  string `protobuf:"bytes,6,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
}

func (x *Identity_EnvInfo) Reset() {
	*x = Identity_EnvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity_EnvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity_EnvInfo) ProtoMessage() {}

func (x *Identity_EnvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity_EnvInfo.ProtoReflect.Descriptor instead.
func (*Identity_EnvInfo) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{21, 0}
}

func (x *Identity_EnvInfo) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Identity_EnvInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Identity_EnvInfo) GetOsRelease() string {
	if x != nil {
		return x.OsRelease
	}
	return ""
}

func (x *Identity_EnvInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *Identity_EnvInfo) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Identity_EnvInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type Identity_SdkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=AppId,proto3" json:"AppId,omitempty"`
	AppVersion string `protobuf:"bytes,2,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	Branch     string `protobuf:"bytes,3,opt,name=Branch,proto3" json:"Branch,omitempty"`
	Revision   string `protobuf:"bytes,4,opt,name=Revision,proto3" json:"Revision,omitempty"`
	Type       string `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	Version    string `protobuf:"bytes,6,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *Identity_SdkInfo) Reset() {
	*x = Identity_SdkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity_SdkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity_SdkInfo) ProtoMessage() {}

func (x *Identity_SdkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity_SdkInfo.ProtoReflect.Descriptor instead.
func (*Identity_SdkInfo) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{21, 1}
}

func (x *Identity_SdkInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Identity_SdkInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Identity_SdkInfo) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Identity_SdkInfo) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *Identity_SdkInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Identity_SdkInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Identity_ServiceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId    string `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ConfigTypeId string `protobuf:"bytes,2,opt,name=configTypeId,proto3" json:"configTypeId,omitempty"`
	ConfigId     string `protobuf:"bytes,3,opt,name=configId,proto3" json:"configId,omitempty"`
}

func (x *Identity_ServiceConfig) Reset() {
	*x = Identity_ServiceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity_ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity_ServiceConfig) ProtoMessage() {}

func (x *Identity_ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity_ServiceConfig.ProtoReflect.Descriptor instead.
func (*Identity_ServiceConfig) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{21, 2}
}

func (x *Identity_ServiceConfig) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Identity_ServiceConfig) GetConfigTypeId() string {
	if x != nil {
		return x.ConfigTypeId
	}
	return ""
}

func (x *Identity_ServiceConfig) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

type PostureCheck_Mac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddresses []string `protobuf:"bytes,1,rep,name=macAddresses,proto3" json:"macAddresses,omitempty"`
}

func (x *PostureCheck_Mac) Reset() {
	*x = PostureCheck_Mac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_Mac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_Mac) ProtoMessage() {}

func (x *PostureCheck_Mac) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_Mac.ProtoReflect.Descriptor instead.
func (*PostureCheck_Mac) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 0}
}

func (x *PostureCheck_Mac) GetMacAddresses() []string {
	if x != nil {
		return x.MacAddresses
	}
	return nil
}

type PostureCheck_Mfa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeoutSeconds        int64 `protobuf:"varint,1,opt,name=TimeoutSeconds,proto3" json:"TimeoutSeconds,omitempty"`
	PromptOnWake          bool  `protobuf:"varint,2,opt,name=PromptOnWake,proto3" json:"PromptOnWake,omitempty"`
	PromptOnUnlock        bool  `protobuf:"varint,3,opt,name=PromptOnUnlock,proto3" json:"PromptOnUnlock,omitempty"`
	IgnoreLegacyEndpoints bool  `protobuf:"varint,4,opt,name=IgnoreLegacyEndpoints,proto3" json:"IgnoreLegacyEndpoints,omitempty"`
}

func (x *PostureCheck_Mfa) Reset() {
	*x = PostureCheck_Mfa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_Mfa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_Mfa) ProtoMessage() {}

func (x *PostureCheck_Mfa) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_Mfa.ProtoReflect.Descriptor instead.
func (*PostureCheck_Mfa) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 1}
}

func (x *PostureCheck_Mfa) GetTimeoutSeconds() int64 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *PostureCheck_Mfa) GetPromptOnWake() bool {
	if x != nil {
		return x.PromptOnWake
	}
	return false
}

func (x *PostureCheck_Mfa) GetPromptOnUnlock() bool {
	if x != nil {
		return x.PromptOnUnlock
	}
	return false
}

func (x *PostureCheck_Mfa) GetIgnoreLegacyEndpoints() bool {
	if x != nil {
		return x.IgnoreLegacyEndpoints
	}
	return false
}

type PostureCheck_Os struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsType     string   `protobuf:"bytes,1,opt,name=OsType,proto3" json:"OsType,omitempty"`
	OsVersions []string `protobuf:"bytes,2,rep,name=OsVersions,proto3" json:"OsVersions,omitempty"`
}

func (x *PostureCheck_Os) Reset() {
	*x = PostureCheck_Os{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_Os) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_Os) ProtoMessage() {}

func (x *PostureCheck_Os) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_Os.ProtoReflect.Descriptor instead.
func (*PostureCheck_Os) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 2}
}

func (x *PostureCheck_Os) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *PostureCheck_Os) GetOsVersions() []string {
	if x != nil {
		return x.OsVersions
	}
	return nil
}

type PostureCheck_OsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsList []*PostureCheck_Os `protobuf:"bytes,1,rep,name=osList,proto3" json:"osList,omitempty"`
}

func (x *PostureCheck_OsList) Reset() {
	*x = PostureCheck_OsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_OsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_OsList) ProtoMessage() {}

func (x *PostureCheck_OsList) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_OsList.ProtoReflect.Descriptor instead.
func (*PostureCheck_OsList) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 3}
}

func (x *PostureCheck_OsList) GetOsList() []*PostureCheck_Os {
	if x != nil {
		return x.OsList
	}
	return nil
}

type PostureCheck_Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsType       string   `protobuf:"bytes,1,opt,name=OsType,proto3" json:"OsType,omitempty"`
	Path         string   `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Hashes       []string `protobuf:"bytes,3,rep,name=Hashes,proto3" json:"Hashes,omitempty"`
	Fingerprints []string `protobuf:"bytes,4,rep,name=Fingerprints,proto3" json:"Fingerprints,omitempty"`
}

func (x *PostureCheck_Process) Reset() {
	*x = PostureCheck_Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_Process) ProtoMessage() {}

func (x *PostureCheck_Process) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_Process.ProtoReflect.Descriptor instead.
func (*PostureCheck_Process) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 4}
}

func (x *PostureCheck_Process) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *PostureCheck_Process) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PostureCheck_Process) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *PostureCheck_Process) GetFingerprints() []string {
	if x != nil {
		return x.Fingerprints
	}
	return nil
}

type PostureCheck_ProcessMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Semantic  string                  `protobuf:"bytes,1,opt,name=semantic,proto3" json:"semantic,omitempty"`
	Processes []*PostureCheck_Process `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty"`
}

func (x *PostureCheck_ProcessMulti) Reset() {
	*x = PostureCheck_ProcessMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_ProcessMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_ProcessMulti) ProtoMessage() {}

func (x *PostureCheck_ProcessMulti) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_ProcessMulti.ProtoReflect.Descriptor instead.
func (*PostureCheck_ProcessMulti) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 5}
}

func (x *PostureCheck_ProcessMulti) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *PostureCheck_ProcessMulti) GetProcesses() []*PostureCheck_Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

type PostureCheck_Domains struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []string `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *PostureCheck_Domains) Reset() {
	*x = PostureCheck_Domains{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureCheck_Domains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureCheck_Domains) ProtoMessage() {}

func (x *PostureCheck_Domains) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureCheck_Domains.ProtoReflect.Descriptor instead.
func (*PostureCheck_Domains) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{24, 6}
}

func (x *PostureCheck_Domains) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type UpdateServiceConfigsCmd_ServiceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ConfigId  string `protobuf:"bytes,2,opt,name=configId,proto3" json:"configId,omitempty"`
}

func (x *UpdateServiceConfigsCmd_ServiceConfig) Reset() {
	*x = UpdateServiceConfigsCmd_ServiceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceConfigsCmd_ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceConfigsCmd_ServiceConfig) ProtoMessage() {}

func (x *UpdateServiceConfigsCmd_ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceConfigsCmd_ServiceConfig.ProtoReflect.Descriptor instead.
func (*UpdateServiceConfigsCmd_ServiceConfig) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{31, 0}
}

func (x *UpdateServiceConfigsCmd_ServiceConfig) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UpdateServiceConfigsCmd_ServiceConfig) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

var File_edge_cmd_proto protoreflect.FileDescriptor

var file_edge_cmd_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x4f, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x61, 0x66, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x78, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x74,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x22, 0x91, 0x01,
	0x0a, 0x08, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x07, 0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x6e, 0x69,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08,
	0x6e, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x9c, 0x01, 0x0a, 0x07, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x55, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a, 0x73, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x3d, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a,
	0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xa9, 0x02, 0x0a, 0x09, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a,
	0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x07, 0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a,
	0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x08, 0x6e, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a, 0x73, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb9, 0x07, 0x0a, 0x0d,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x04,
	0x63, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74,
	0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x65, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x75, 0x70, 0x64, 0x62,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x62, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x70, 0x64, 0x62, 0x1a, 0x8c, 0x04, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x65,
	0x6d, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x65, 0x6d, 0x12, 0x2c, 0x0a,
	0x11, 0x69, 0x73, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x69,
	0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x4b,
	0x65, 0x79, 0x52, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x6c,
	0x61, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1a, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x6c,
	0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54,
	0x6f, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x6f, 0x52,
	0x6f, 0x6f, 0x74, 0x1a, 0x52, 0x0a, 0x04, 0x55, 0x70, 0x64, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x09, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0xd4, 0x05, 0x0a,
	0x07, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x65, 0x72,
	0x74, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x75, 0x70, 0x64, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x62,
	0x52, 0x04, 0x75, 0x70, 0x64, 0x62, 0x12, 0x43, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x4a, 0x77, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x74,
	0x4a, 0x77, 0x74, 0x52, 0x06, 0x65, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x1a, 0x4e, 0x0a, 0x04, 0x43,
	0x65, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x73, 0x1a, 0xb2, 0x02, 0x0a, 0x04,
	0x55, 0x70, 0x64, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x68,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x61, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4d, 0x69, 0x78,
	0x65, 0x64, 0x43, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x4c, 0x6f, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x1a, 0x80, 0x01, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x6c,
	0x6c, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x32, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x73, 0x1a, 0x7f, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x6f, 0x74, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x6f,
	0x74, 0x70, 0x12, 0x37, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78,
	0x74, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a,
	0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x06, 0x0a, 0x02, 0x43, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x65,
	0x72, 0x74, 0x50, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x65, 0x72,
	0x74, 0x50, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x3c, 0x0a, 0x19, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x61, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x61, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x3a, 0x0a, 0x18, 0x69, 0x73, 0x4f, 0x74, 0x74, 0x43, 0x61, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x4f, 0x74, 0x74, 0x43, 0x61, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x88, 0x01, 0x01, 0x1a, 0xc7, 0x01,
	0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x22, 0xf1, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a,
	0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xd9, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xaa, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x52, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x61, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x11, 0x41, 0x70,
	0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a,
	0x0e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x0a, 0x41,
	0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd1, 0x05, 0x0a, 0x0a, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0b,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65,
	0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x15, 0x75,
	0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x15, 0x75, 0x6e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43,
	0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x6f, 0x54, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x54, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x53, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x75, 0x6e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x22, 0x6e, 0x0a, 0x15, 0x52, 0x65, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x43,
	0x6d, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x22, 0xc4, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74,
	0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x22, 0xb9, 0x02, 0x0a, 0x10, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x64, 0x67, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe0, 0x04, 0x0a,
	0x0a, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x23, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x65, 0x64, 0x67,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x61, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x63, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x64, 0x67,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x61,
	0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xc5, 0x01, 0x0a, 0x25, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x22, 0x9d, 0x07, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x77, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6a, 0x77, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6a, 0x77, 0x6b,
	0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x6b, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x6b, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a,
	0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x50,
	0x65, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6a, 0x77, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8b, 0x0e, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x76,
	0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x07, 0x73, 0x64, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x07,
	0x73, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x18, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x63,
	0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x63,
	0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x65, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a,
	0x9d, 0x01, 0x0a, 0x07, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x4f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0xa1, 0x01, 0x0a, 0x07, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0x6d, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x65, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x64,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0xcd, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x22, 0x9d, 0x02, 0x0a, 0x03, 0x4d, 0x66, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x66, 0x61, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x0a, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e,
	0x4d, 0x61, 0x63, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x36, 0x0a, 0x03, 0x6d, 0x66,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x4d, 0x66, 0x61, 0x48, 0x00, 0x52, 0x03, 0x6d,
	0x66, 0x61, 0x12, 0x3f, 0x0a, 0x06, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x4f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x42, 0x0a, 0x07, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0x29,
	0x0a, 0x03, 0x4d, 0x61, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0xaf, 0x01, 0x0a, 0x03, 0x4d, 0x66,
	0x61, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x4f, 0x6e, 0x57, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x6e, 0x57, 0x61, 0x6b, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x6e, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x02, 0x4f,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4f,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x43, 0x0a, 0x06, 0x4f, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x2e, 0x4f, 0x73, 0x52, 0x06, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x71,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x73, 0x1a, 0x70, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x44, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x1a, 0x23, 0x0a, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x76,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x53, 0x0a,
	0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xff, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xc5, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x64, 0x67,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x02, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x73, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x04, 0x0a, 0x0d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x15, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x31, 0x0a, 0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43,
	0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x11,
	0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x50, 0x65,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e,
	0x6f, 0x54, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x42, 0x18, 0x0a, 0x16, 0x5f,
	0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x22, 0xc2, 0x01, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74,
	0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x22, 0xaa, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x5f,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x43, 0x6d,
	0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0x31, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x1a, 0x49, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x2a, 0x80, 0x02,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x10, 0xe8, 0x07, 0x12, 0x2b, 0x0a, 0x26, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x10, 0xe9, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0xea, 0x07, 0x12, 0x1c,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0xeb, 0x07, 0x12, 0x26, 0x0a, 0x21,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69,
	0x74, 0x68, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x10, 0xec, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x10, 0xed, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x45,
	0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0xee, 0x07,
	0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x7a, 0x69, 0x74, 0x69, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x70, 0x62, 0x2f,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_edge_cmd_proto_rawDescOnce sync.Once
	file_edge_cmd_proto_rawDescData = file_edge_cmd_proto_rawDesc
)

func file_edge_cmd_proto_rawDescGZIP() []byte {
	file_edge_cmd_proto_rawDescOnce.Do(func() {
		file_edge_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_edge_cmd_proto_rawDescData)
	})
	return file_edge_cmd_proto_rawDescData
}

var file_edge_cmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_edge_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_edge_cmd_proto_goTypes = []interface{}{
	(CommandType)(0),                              // 0: ziti.edge_cmd.pb.CommandType
	(*ChangeContext)(nil),                         // 1: ziti.edge_cmd.pb.ChangeContext
	(*CreateEdgeTerminatorCommand)(nil),           // 2: ziti.edge_cmd.pb.CreateEdgeTerminatorCommand
	(*TagValue)(nil),                              // 3: ziti.edge_cmd.pb.TagValue
	(*JsonMap)(nil),                               // 4: ziti.edge_cmd.pb.JsonMap
	(*JsonList)(nil),                              // 5: ziti.edge_cmd.pb.JsonList
	(*JsonValue)(nil),                             // 6: ziti.edge_cmd.pb.JsonValue
	(*Authenticator)(nil),                         // 7: ziti.edge_cmd.pb.Authenticator
	(*AuthPolicy)(nil),                            // 8: ziti.edge_cmd.pb.AuthPolicy
	(*Ca)(nil),                                    // 9: ziti.edge_cmd.pb.Ca
	(*Config)(nil),                                // 10: ziti.edge_cmd.pb.Config
	(*ConfigType)(nil),                            // 11: ziti.edge_cmd.pb.ConfigType
	(*Controller)(nil),                            // 12: ziti.edge_cmd.pb.Controller
	(*ApiAddressList)(nil),                        // 13: ziti.edge_cmd.pb.ApiAddressList
	(*ApiAddress)(nil),                            // 14: ziti.edge_cmd.pb.ApiAddress
	(*EdgeRouter)(nil),                            // 15: ziti.edge_cmd.pb.EdgeRouter
	(*ReEnrollEdgeRouterCmd)(nil),                 // 16: ziti.edge_cmd.pb.ReEnrollEdgeRouterCmd
	(*CreateEdgeRouterCmd)(nil),                   // 17: ziti.edge_cmd.pb.CreateEdgeRouterCmd
	(*EdgeRouterPolicy)(nil),                      // 18: ziti.edge_cmd.pb.EdgeRouterPolicy
	(*Enrollment)(nil),                            // 19: ziti.edge_cmd.pb.Enrollment
	(*ReplaceEnrollmentWithAuthenticatorCmd)(nil), // 20: ziti.edge_cmd.pb.ReplaceEnrollmentWithAuthenticatorCmd
	(*ExternalJwtSigner)(nil),                     // 21: ziti.edge_cmd.pb.ExternalJwtSigner
	(*Identity)(nil),                              // 22: ziti.edge_cmd.pb.Identity
	(*CreateIdentityWithEnrollmentsCmd)(nil),      // 23: ziti.edge_cmd.pb.CreateIdentityWithEnrollmentsCmd
	(*Mfa)(nil),                                   // 24: ziti.edge_cmd.pb.Mfa
	(*PostureCheck)(nil),                          // 25: ziti.edge_cmd.pb.PostureCheck
	(*Revocation)(nil),                            // 26: ziti.edge_cmd.pb.Revocation
	(*Service)(nil),                               // 27: ziti.edge_cmd.pb.Service
	(*ServiceEdgeRouterPolicy)(nil),               // 28: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy
	(*ServicePolicy)(nil),                         // 29: ziti.edge_cmd.pb.ServicePolicy
	(*TransitRouter)(nil),                         // 30: ziti.edge_cmd.pb.TransitRouter
	(*CreateTransitRouterCmd)(nil),                // 31: ziti.edge_cmd.pb.CreateTransitRouterCmd
	(*UpdateServiceConfigsCmd)(nil),               // 32: ziti.edge_cmd.pb.UpdateServiceConfigsCmd
	nil,                                           // 33: ziti.edge_cmd.pb.ChangeContext.AttributesEntry
	nil,                                           // 34: ziti.edge_cmd.pb.JsonMap.ValueEntry
	(*Authenticator_Cert)(nil),                    // 35: ziti.edge_cmd.pb.Authenticator.Cert
	(*Authenticator_Updb)(nil),                    // 36: ziti.edge_cmd.pb.Authenticator.Updb
	nil,                                           // 37: ziti.edge_cmd.pb.Authenticator.TagsEntry
	(*AuthPolicy_Primary)(nil),                    // 38: ziti.edge_cmd.pb.AuthPolicy.Primary
	(*AuthPolicy_Secondary)(nil),                  // 39: ziti.edge_cmd.pb.AuthPolicy.Secondary
	nil,                                           // 40: ziti.edge_cmd.pb.AuthPolicy.TagsEntry
	(*AuthPolicy_Primary_Cert)(nil),               // 41: ziti.edge_cmd.pb.AuthPolicy.Primary.Cert
	(*AuthPolicy_Primary_Updb)(nil),               // 42: ziti.edge_cmd.pb.AuthPolicy.Primary.Updb
	(*AuthPolicy_Primary_ExtJwt)(nil),             // 43: ziti.edge_cmd.pb.AuthPolicy.Primary.ExtJwt
	(*Ca_ExternalIdClaim)(nil),                    // 44: ziti.edge_cmd.pb.Ca.ExternalIdClaim
	nil,                                           // 45: ziti.edge_cmd.pb.Ca.TagsEntry
	nil,                                           // 46: ziti.edge_cmd.pb.Config.TagsEntry
	nil,                                           // 47: ziti.edge_cmd.pb.ConfigType.TagsEntry
	nil,                                           // 48: ziti.edge_cmd.pb.Controller.TagsEntry
	nil,                                           // 49: ziti.edge_cmd.pb.Controller.ApiAddressesEntry
	nil,                                           // 50: ziti.edge_cmd.pb.EdgeRouter.TagsEntry
	nil,                                           // 51: ziti.edge_cmd.pb.EdgeRouterPolicy.TagsEntry
	nil,                                           // 52: ziti.edge_cmd.pb.Enrollment.TagsEntry
	nil,                                           // 53: ziti.edge_cmd.pb.ExternalJwtSigner.TagsEntry
	(*Identity_EnvInfo)(nil),                      // 54: ziti.edge_cmd.pb.Identity.EnvInfo
	(*Identity_SdkInfo)(nil),                      // 55: ziti.edge_cmd.pb.Identity.SdkInfo
	(*Identity_ServiceConfig)(nil),                // 56: ziti.edge_cmd.pb.Identity.ServiceConfig
	nil,                                           // 57: ziti.edge_cmd.pb.Identity.TagsEntry
	nil,                                           // 58: ziti.edge_cmd.pb.Identity.ServiceHostingPrecedencesEntry
	nil,                                           // 59: ziti.edge_cmd.pb.Identity.ServiceHostingCostsEntry
	nil,                                           // 60: ziti.edge_cmd.pb.Mfa.TagsEntry
	(*PostureCheck_Mac)(nil),                      // 61: ziti.edge_cmd.pb.PostureCheck.Mac
	(*PostureCheck_Mfa)(nil),                      // 62: ziti.edge_cmd.pb.PostureCheck.Mfa
	(*PostureCheck_Os)(nil),                       // 63: ziti.edge_cmd.pb.PostureCheck.Os
	(*PostureCheck_OsList)(nil),                   // 64: ziti.edge_cmd.pb.PostureCheck.OsList
	(*PostureCheck_Process)(nil),                  // 65: ziti.edge_cmd.pb.PostureCheck.Process
	(*PostureCheck_ProcessMulti)(nil),             // 66: ziti.edge_cmd.pb.PostureCheck.ProcessMulti
	(*PostureCheck_Domains)(nil),                  // 67: ziti.edge_cmd.pb.PostureCheck.Domains
	nil,                                           // 68: ziti.edge_cmd.pb.PostureCheck.TagsEntry
	nil,                                           // 69: ziti.edge_cmd.pb.Revocation.TagsEntry
	nil,                                           // 70: ziti.edge_cmd.pb.Service.TagsEntry
	nil,                                           // 71: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.TagsEntry
	nil,                                           // 72: ziti.edge_cmd.pb.ServicePolicy.TagsEntry
	nil,                                           // 73: ziti.edge_cmd.pb.TransitRouter.TagsEntry
	(*UpdateServiceConfigsCmd_ServiceConfig)(nil), // 74: ziti.edge_cmd.pb.UpdateServiceConfigsCmd.ServiceConfig
	(*timestamppb.Timestamp)(nil),                 // 75: google.protobuf.Timestamp
}
var file_edge_cmd_proto_depIdxs = []int32{
	33, // 0: ziti.edge_cmd.pb.ChangeContext.attributes:type_name -> ziti.edge_cmd.pb.ChangeContext.AttributesEntry
	1,  // 1: ziti.edge_cmd.pb.CreateEdgeTerminatorCommand.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	34, // 2: ziti.edge_cmd.pb.JsonMap.value:type_name -> ziti.edge_cmd.pb.JsonMap.ValueEntry
	6,  // 3: ziti.edge_cmd.pb.JsonList.value:type_name -> ziti.edge_cmd.pb.JsonValue
	4,  // 4: ziti.edge_cmd.pb.JsonValue.mapValue:type_name -> ziti.edge_cmd.pb.JsonMap
	5,  // 5: ziti.edge_cmd.pb.JsonValue.listValue:type_name -> ziti.edge_cmd.pb.JsonList
	37, // 6: ziti.edge_cmd.pb.Authenticator.tags:type_name -> ziti.edge_cmd.pb.Authenticator.TagsEntry
	35, // 7: ziti.edge_cmd.pb.Authenticator.cert:type_name -> ziti.edge_cmd.pb.Authenticator.Cert
	36, // 8: ziti.edge_cmd.pb.Authenticator.updb:type_name -> ziti.edge_cmd.pb.Authenticator.Updb
	38, // 9: ziti.edge_cmd.pb.AuthPolicy.primary:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary
	39, // 10: ziti.edge_cmd.pb.AuthPolicy.secondary:type_name -> ziti.edge_cmd.pb.AuthPolicy.Secondary
	40, // 11: ziti.edge_cmd.pb.AuthPolicy.tags:type_name -> ziti.edge_cmd.pb.AuthPolicy.TagsEntry
	45, // 12: ziti.edge_cmd.pb.Ca.tags:type_name -> ziti.edge_cmd.pb.Ca.TagsEntry
	44, // 13: ziti.edge_cmd.pb.Ca.externalIdClaim:type_name -> ziti.edge_cmd.pb.Ca.ExternalIdClaim
	46, // 14: ziti.edge_cmd.pb.Config.tags:type_name -> ziti.edge_cmd.pb.Config.TagsEntry
	47, // 15: ziti.edge_cmd.pb.ConfigType.tags:type_name -> ziti.edge_cmd.pb.ConfigType.TagsEntry
	75, // 16: ziti.edge_cmd.pb.Controller.lastJoinedAt:type_name -> google.protobuf.Timestamp
	48, // 17: ziti.edge_cmd.pb.Controller.tags:type_name -> ziti.edge_cmd.pb.Controller.TagsEntry
	49, // 18: ziti.edge_cmd.pb.Controller.apiAddresses:type_name -> ziti.edge_cmd.pb.Controller.ApiAddressesEntry
	14, // 19: ziti.edge_cmd.pb.ApiAddressList.addresses:type_name -> ziti.edge_cmd.pb.ApiAddress
	50, // 20: ziti.edge_cmd.pb.EdgeRouter.tags:type_name -> ziti.edge_cmd.pb.EdgeRouter.TagsEntry
	1,  // 21: ziti.edge_cmd.pb.ReEnrollEdgeRouterCmd.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	15, // 22: ziti.edge_cmd.pb.CreateEdgeRouterCmd.edgeRouter:type_name -> ziti.edge_cmd.pb.EdgeRouter
	19, // 23: ziti.edge_cmd.pb.CreateEdgeRouterCmd.enrollment:type_name -> ziti.edge_cmd.pb.Enrollment
	1,  // 24: ziti.edge_cmd.pb.CreateEdgeRouterCmd.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	51, // 25: ziti.edge_cmd.pb.EdgeRouterPolicy.tags:type_name -> ziti.edge_cmd.pb.EdgeRouterPolicy.TagsEntry
	52, // 26: ziti.edge_cmd.pb.Enrollment.tags:type_name -> ziti.edge_cmd.pb.Enrollment.TagsEntry
	75, // 27: ziti.edge_cmd.pb.Enrollment.issuedAt:type_name -> google.protobuf.Timestamp
	75, // 28: ziti.edge_cmd.pb.Enrollment.expiresAt:type_name -> google.protobuf.Timestamp
	7,  // 29: ziti.edge_cmd.pb.ReplaceEnrollmentWithAuthenticatorCmd.authenticator:type_name -> ziti.edge_cmd.pb.Authenticator
	1,  // 30: ziti.edge_cmd.pb.ReplaceEnrollmentWithAuthenticatorCmd.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	53, // 31: ziti.edge_cmd.pb.ExternalJwtSigner.tags:type_name -> ziti.edge_cmd.pb.ExternalJwtSigner.TagsEntry
	75, // 32: ziti.edge_cmd.pb.ExternalJwtSigner.notAfter:type_name -> google.protobuf.Timestamp
	75, // 33: ziti.edge_cmd.pb.ExternalJwtSigner.notBefore:type_name -> google.protobuf.Timestamp
	57, // 34: ziti.edge_cmd.pb.Identity.tags:type_name -> ziti.edge_cmd.pb.Identity.TagsEntry
	54, // 35: ziti.edge_cmd.pb.Identity.envInfo:type_name -> ziti.edge_cmd.pb.Identity.EnvInfo
	55, // 36: ziti.edge_cmd.pb.Identity.sdkInfo:type_name -> ziti.edge_cmd.pb.Identity.SdkInfo
	58, // 37: ziti.edge_cmd.pb.Identity.serviceHostingPrecedences:type_name -> ziti.edge_cmd.pb.Identity.ServiceHostingPrecedencesEntry
	59, // 38: ziti.edge_cmd.pb.Identity.serviceHostingCosts:type_name -> ziti.edge_cmd.pb.Identity.ServiceHostingCostsEntry
	75, // 39: ziti.edge_cmd.pb.Identity.disabledAt:type_name -> google.protobuf.Timestamp
	75, // 40: ziti.edge_cmd.pb.Identity.disabledUntil:type_name -> google.protobuf.Timestamp
	56, // 41: ziti.edge_cmd.pb.Identity.serviceConfigs:type_name -> ziti.edge_cmd.pb.Identity.ServiceConfig
	22, // 42: ziti.edge_cmd.pb.CreateIdentityWithEnrollmentsCmd.identity:type_name -> ziti.edge_cmd.pb.Identity
	19, // 43: ziti.edge_cmd.pb.CreateIdentityWithEnrollmentsCmd.enrollments:type_name -> ziti.edge_cmd.pb.Enrollment
	1,  // 44: ziti.edge_cmd.pb.CreateIdentityWithEnrollmentsCmd.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	60, // 45: ziti.edge_cmd.pb.Mfa.tags:type_name -> ziti.edge_cmd.pb.Mfa.TagsEntry
	68, // 46: ziti.edge_cmd.pb.PostureCheck.tags:type_name -> ziti.edge_cmd.pb.PostureCheck.TagsEntry
	61, // 47: ziti.edge_cmd.pb.PostureCheck.mac:type_name -> ziti.edge_cmd.pb.PostureCheck.Mac
	62, // 48: ziti.edge_cmd.pb.PostureCheck.mfa:type_name -> ziti.edge_cmd.pb.PostureCheck.Mfa
	64, // 49: ziti.edge_cmd.pb.PostureCheck.osList:type_name -> ziti.edge_cmd.pb.PostureCheck.OsList
	65, // 50: ziti.edge_cmd.pb.PostureCheck.process:type_name -> ziti.edge_cmd.pb.PostureCheck.Process
	66, // 51: ziti.edge_cmd.pb.PostureCheck.processMulti:type_name -> ziti.edge_cmd.pb.PostureCheck.ProcessMulti
	67, // 52: ziti.edge_cmd.pb.PostureCheck.domains:type_name -> ziti.edge_cmd.pb.PostureCheck.Domains
	75, // 53: ziti.edge_cmd.pb.Revocation.expiresAt:type_name -> google.protobuf.Timestamp
	69, // 54: ziti.edge_cmd.pb.Revocation.tags:type_name -> ziti.edge_cmd.pb.Revocation.TagsEntry
	70, // 55: ziti.edge_cmd.pb.Service.tags:type_name -> ziti.edge_cmd.pb.Service.TagsEntry
	71, // 56: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.tags:type_name -> ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.TagsEntry
	72, // 57: ziti.edge_cmd.pb.ServicePolicy.tags:type_name -> ziti.edge_cmd.pb.ServicePolicy.TagsEntry
	73, // 58: ziti.edge_cmd.pb.TransitRouter.tags:type_name -> ziti.edge_cmd.pb.TransitRouter.TagsEntry
	30, // 59: ziti.edge_cmd.pb.CreateTransitRouterCmd.router:type_name -> ziti.edge_cmd.pb.TransitRouter
	19, // 60: ziti.edge_cmd.pb.CreateTransitRouterCmd.enrollment:type_name -> ziti.edge_cmd.pb.Enrollment
	1,  // 61: ziti.edge_cmd.pb.CreateTransitRouterCmd.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	74, // 62: ziti.edge_cmd.pb.UpdateServiceConfigsCmd.serviceConfigs:type_name -> ziti.edge_cmd.pb.UpdateServiceConfigsCmd.ServiceConfig
	1,  // 63: ziti.edge_cmd.pb.UpdateServiceConfigsCmd.ctx:type_name -> ziti.edge_cmd.pb.ChangeContext
	6,  // 64: ziti.edge_cmd.pb.JsonMap.ValueEntry.value:type_name -> ziti.edge_cmd.pb.JsonValue
	75, // 65: ziti.edge_cmd.pb.Authenticator.Cert.extendRequestedAt:type_name -> google.protobuf.Timestamp
	3,  // 66: ziti.edge_cmd.pb.Authenticator.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	41, // 67: ziti.edge_cmd.pb.AuthPolicy.Primary.cert:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary.Cert
	42, // 68: ziti.edge_cmd.pb.AuthPolicy.Primary.updb:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary.Updb
	43, // 69: ziti.edge_cmd.pb.AuthPolicy.Primary.extJwt:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary.ExtJwt
	3,  // 70: ziti.edge_cmd.pb.AuthPolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 71: ziti.edge_cmd.pb.Ca.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 72: ziti.edge_cmd.pb.Config.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 73: ziti.edge_cmd.pb.ConfigType.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 74: ziti.edge_cmd.pb.Controller.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	13, // 75: ziti.edge_cmd.pb.Controller.ApiAddressesEntry.value:type_name -> ziti.edge_cmd.pb.ApiAddressList
	3,  // 76: ziti.edge_cmd.pb.EdgeRouter.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 77: ziti.edge_cmd.pb.EdgeRouterPolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 78: ziti.edge_cmd.pb.Enrollment.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 79: ziti.edge_cmd.pb.ExternalJwtSigner.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 80: ziti.edge_cmd.pb.Identity.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 81: ziti.edge_cmd.pb.Mfa.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	63, // 82: ziti.edge_cmd.pb.PostureCheck.OsList.osList:type_name -> ziti.edge_cmd.pb.PostureCheck.Os
	65, // 83: ziti.edge_cmd.pb.PostureCheck.ProcessMulti.processes:type_name -> ziti.edge_cmd.pb.PostureCheck.Process
	3,  // 84: ziti.edge_cmd.pb.PostureCheck.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 85: ziti.edge_cmd.pb.Revocation.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 86: ziti.edge_cmd.pb.Service.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 87: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 88: ziti.edge_cmd.pb.ServicePolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	3,  // 89: ziti.edge_cmd.pb.TransitRouter.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	90, // [90:90] is the sub-list for method output_type
	90, // [90:90] is the sub-list for method input_type
	90, // [90:90] is the sub-list for extension type_name
	90, // [90:90] is the sub-list for extension extendee
	0,  // [0:90] is the sub-list for field type_name
}

func init() { file_edge_cmd_proto_init() }
func file_edge_cmd_proto_init() {
	if File_edge_cmd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_edge_cmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEdgeTerminatorCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authenticator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ca); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Controller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAddressList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeRouter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReEnrollEdgeRouterCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEdgeRouterCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeRouterPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enrollment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceEnrollmentWithAuthenticatorCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalJwtSigner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityWithEnrollmentsCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mfa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Revocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceEdgeRouterPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitRouter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransitRouterCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceConfigsCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authenticator_Cert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authenticator_Updb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Secondary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary_Cert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary_Updb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary_ExtJwt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ca_ExternalIdClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity_EnvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity_SdkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity_ServiceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_Mac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_Mfa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_Os); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_OsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_ProcessMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureCheck_Domains); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceConfigsCmd_ServiceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_edge_cmd_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TagValue_BoolValue)(nil),
		(*TagValue_StringValue)(nil),
		(*TagValue_FpValue)(nil),
		(*TagValue_NilValue)(nil),
	}
	file_edge_cmd_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*JsonValue_BoolValue)(nil),
		(*JsonValue_StringValue)(nil),
		(*JsonValue_FpValue)(nil),
		(*JsonValue_Int64Value)(nil),
		(*JsonValue_NilValue)(nil),
		(*JsonValue_MapValue)(nil),
		(*JsonValue_ListValue)(nil),
	}
	file_edge_cmd_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Authenticator_Cert_)(nil),
		(*Authenticator_Updb_)(nil),
	}
	file_edge_cmd_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*PostureCheck_Mac_)(nil),
		(*PostureCheck_Mfa_)(nil),
		(*PostureCheck_OsList_)(nil),
		(*PostureCheck_Process_)(nil),
		(*PostureCheck_ProcessMulti_)(nil),
		(*PostureCheck_Domains_)(nil),
	}
	file_edge_cmd_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[38].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edge_cmd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_edge_cmd_proto_goTypes,
		DependencyIndexes: file_edge_cmd_proto_depIdxs,
		EnumInfos:         file_edge_cmd_proto_enumTypes,
		MessageInfos:      file_edge_cmd_proto_msgTypes,
	}.Build()
	File_edge_cmd_proto = out.File
	file_edge_cmd_proto_rawDesc = nil
	file_edge_cmd_proto_goTypes = nil
	file_edge_cmd_proto_depIdxs = nil
}
